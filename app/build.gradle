apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.github.triplet.play'

def isRunningOnTravis = System.getenv("CI") == "true"

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "me.jfenn.metronome"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 15
        versionName "1.7"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

        multiDexEnabled true

        if (isRunningOnTravis) {
            def githubToken = System.getenv("GITHUB_TOKEN")
            buildConfigField "String", "GITHUB_TOKEN", "\"$githubToken\""
        } else {
            buildConfigField "String", "GITHUB_TOKEN", 'null'
        }
    }

    signingConfigs {
        release
    }

    buildTypes {
        release {
            lintOptions {
                checkReleaseBuilds false
                abortOnError false
            }
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    if (isRunningOnTravis) {
        buildTypes.release.signingConfig = signingConfigs.release
        signingConfigs.release.storeFile = file("../key.jks")
        signingConfigs.release.storePassword = System.getenv("KEYSTORE_PASSWORD")
        signingConfigs.release.keyAlias = System.getenv("KEYSTORE_ALIAS")
        signingConfigs.release.keyPassword = System.getenv("KEYSTORE_ALIAS_PASSWORD")
    }

    /**
     * This is used to circumvent some of Google Play's restrictions
     * and allow proprietary dependencies (billing) to exist only in
     * the Google Play apks without interfering with the OSS version.
     */
    flavorDimensions "distribution"
    productFlavors {
        gplay {
            dimension "distribution"
            applicationId "james.metronome"
        }

        oss {
            dimension "distribution"
        }
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        merge 'META-INF/*.kotlin_module'
    }
}

play {
    serviceAccountCredentials = file("../service.json")
    track = "alpha"
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    // debugging tools
    testImplementation 'junit:junit:4.13'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.3'
    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.3'
    ossImplementation 'me.jfenn:crasher:0.0.2'

    // support libraries
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation "androidx.constraintlayout:constraintlayout:1.1.3"
    implementation 'com.google.android.material:material:1.1.0'

    // billing/donation deps
    gplayImplementation 'com.android.billingclient:billing:1.2'

    // theming & UI elements
    implementation 'com.afollestad.material-dialogs:core:0.9.6.0'
    implementation 'com.github.bumptech.glide:glide:4.11.0'

    implementation 'me.jfenn:Attribouter:0.1.8'
    implementation 'me.jfenn:AndroidUtils:0.0.3'
}
